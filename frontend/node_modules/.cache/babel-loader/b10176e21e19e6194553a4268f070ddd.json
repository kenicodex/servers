{"ast":null,"code":"var cart=[];export function store(){var put=JSON.stringify(cart);sessionStorage.setItem(\"cart\",put);}export function add(newItem,index){var instore=sessionStorage.getItem(\"cart\");instore=JSON.parse(instore);if(sessionStorage.getItem(\"carted-item\".concat(index))===null){sessionStorage.setItem(\"carted-item\".concat(index),true);if(instore===null){cart.push(newItem);store();console.log(\"from the beginning \"+cart);// alert(\"empty but new value is \" + sessionStorage.getItem(\"cart\"))\n}else if(cart.length>0){cart.push(newItem);store();console.log(\"added newitem when cart len  = 0 <->\"+cart);}else if(cart.length===0){cart=JSON.parse(sessionStorage.getItem(\"cart\"));cart.push(newItem);store();console.log(\"cart is now empty \"+cart+\" and len is \"+cart.length);}}}","map":{"version":3,"sources":["C:/Users/PC/Desktop/Works/jobs/CalibreStore/frontend/src/components/Cart/store.js"],"names":["cart","store","put","JSON","stringify","sessionStorage","setItem","add","newItem","index","instore","getItem","parse","push","console","log","length"],"mappings":"AAAA,GAAIA,CAAAA,IAAI,CAAG,EAAX,CACA,MAAO,SAASC,CAAAA,KAAT,EAAiB,CACpB,GAAIC,CAAAA,GAAG,CAAGC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAV,CACAK,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAA+BJ,GAA/B,EACH,CACD,MAAO,SAASK,CAAAA,GAAT,CAAaC,OAAb,CAAqBC,KAArB,CAA4B,CAC/B,GAAIC,CAAAA,OAAO,CAAGL,cAAc,CAACM,OAAf,CAAuB,MAAvB,CAAd,CACAD,OAAO,CAAGP,IAAI,CAACS,KAAL,CAAWF,OAAX,CAAV,CACA,GAAGL,cAAc,CAACM,OAAf,sBAAqCF,KAArC,KAAkD,IAArD,CAA0D,CACtDJ,cAAc,CAACC,OAAf,sBAAqCG,KAArC,EAA6C,IAA7C,EACA,GAAIC,OAAO,GAAK,IAAhB,CAAsB,CAClBV,IAAI,CAACa,IAAL,CAAUL,OAAV,EACAP,KAAK,GACLa,OAAO,CAACC,GAAR,CAAY,sBAAwBf,IAApC,EACA;AACH,CALD,IAKM,IAAGA,IAAI,CAACgB,MAAL,CAAc,CAAjB,CAAmB,CACrBhB,IAAI,CAACa,IAAL,CAAUL,OAAV,EACAP,KAAK,GACLa,OAAO,CAACC,GAAR,CAAY,uCAAyCf,IAArD,EACH,CAJK,IAIA,IAAGA,IAAI,CAACgB,MAAL,GAAgB,CAAnB,CAAqB,CACvBhB,IAAI,CAAGG,IAAI,CAACS,KAAL,CAAWP,cAAc,CAACM,OAAf,CAAuB,MAAvB,CAAX,CAAP,CACAX,IAAI,CAACa,IAAL,CAAUL,OAAV,EACAP,KAAK,GACLa,OAAO,CAACC,GAAR,CAAY,qBAAsBf,IAAtB,CAA6B,cAA7B,CAA8CA,IAAI,CAACgB,MAA/D,EACH,CACJ,CAEJ","sourcesContent":["var cart = []\r\nexport function store() {\r\n    let put = JSON.stringify(cart)\r\n    sessionStorage.setItem(\"cart\", put)\r\n}\r\nexport function add(newItem,index) {\r\n    let instore = sessionStorage.getItem(\"cart\") \r\n    instore = JSON.parse(instore)\r\n    if(sessionStorage.getItem(`carted-item${index}`) === null){\r\n        sessionStorage.setItem(`carted-item${index}`,true)\r\n        if (instore === null) {\r\n            cart.push(newItem)\r\n            store();\r\n            console.log(\"from the beginning \" + cart );\r\n            // alert(\"empty but new value is \" + sessionStorage.getItem(\"cart\"))\r\n        }else if(cart.length > 0){\r\n            cart.push(newItem)\r\n            store();\r\n            console.log(\"added newitem when cart len  = 0 <->\" + cart);\r\n        }else if(cart.length === 0){\r\n            cart = JSON.parse(sessionStorage.getItem(\"cart\"))\r\n            cart.push(newItem)\r\n            store();\r\n            console.log(\"cart is now empty \"+ cart + \" and len is \" + cart.length);\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}