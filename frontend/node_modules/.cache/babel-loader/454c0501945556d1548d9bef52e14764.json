{"ast":null,"code":"var cart = [];\nexport function store() {\n  let put = JSON.stringify(cart);\n  sessionStorage.setItem(\"cart\", put);\n}\nexport function add(newItem, index) {\n  let instore = sessionStorage.getItem(\"cart\");\n  instore = JSON.parse(instore);\n\n  if (sessionStorage.getItem(`carted-item${index}`) === null) {\n    sessionStorage.setItem(`carted-item${index}`, true);\n\n    if (instore === null) {\n      cart.push(newItem);\n      store();\n      console.log(\"from the beginning \" + cart); // alert(\"empty but new value is \" + sessionStorage.getItem(\"cart\"))\n    } else if (cart.length > 0) {\n      cart.push(newItem);\n      store();\n      console.log(\"added newitem when cart len  = 0 <->\" + cart);\n    } else if (cart.length === 0) {\n      cart = JSON.parse(sessionStorage.getItem(\"cart\"));\n      cart.push(newItem);\n      store();\n      console.log(\"cart is now empty \" + cart + \" and len is \" + cart.length);\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/Works/jobs/CalibreStore/frontend/src/components/Cart/store.js"],"names":["cart","store","put","JSON","stringify","sessionStorage","setItem","add","newItem","index","instore","getItem","parse","push","console","log","length"],"mappings":"AAAA,IAAIA,IAAI,GAAG,EAAX;AACA,OAAO,SAASC,KAAT,GAAiB;AACpB,MAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAV;AACAK,EAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BJ,GAA/B;AACH;AACD,OAAO,SAASK,GAAT,CAAaC,OAAb,EAAqBC,KAArB,EAA4B;AAC/B,MAAIC,OAAO,GAAGL,cAAc,CAACM,OAAf,CAAuB,MAAvB,CAAd;AACAD,EAAAA,OAAO,GAAGP,IAAI,CAACS,KAAL,CAAWF,OAAX,CAAV;;AACA,MAAGL,cAAc,CAACM,OAAf,CAAwB,cAAaF,KAAM,EAA3C,MAAkD,IAArD,EAA0D;AACtDJ,IAAAA,cAAc,CAACC,OAAf,CAAwB,cAAaG,KAAM,EAA3C,EAA6C,IAA7C;;AACA,QAAIC,OAAO,KAAK,IAAhB,EAAsB;AAClBV,MAAAA,IAAI,CAACa,IAAL,CAAUL,OAAV;AACAP,MAAAA,KAAK;AACLa,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBf,IAApC,EAHkB,CAIlB;AACH,KALD,MAKM,IAAGA,IAAI,CAACgB,MAAL,GAAc,CAAjB,EAAmB;AACrBhB,MAAAA,IAAI,CAACa,IAAL,CAAUL,OAAV;AACAP,MAAAA,KAAK;AACLa,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAyCf,IAArD;AACH,KAJK,MAIA,IAAGA,IAAI,CAACgB,MAAL,KAAgB,CAAnB,EAAqB;AACvBhB,MAAAA,IAAI,GAAGG,IAAI,CAACS,KAAL,CAAWP,cAAc,CAACM,OAAf,CAAuB,MAAvB,CAAX,CAAP;AACAX,MAAAA,IAAI,CAACa,IAAL,CAAUL,OAAV;AACAP,MAAAA,KAAK;AACLa,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAsBf,IAAtB,GAA6B,cAA7B,GAA8CA,IAAI,CAACgB,MAA/D;AACH;AACJ;AAEJ","sourcesContent":["var cart = []\r\nexport function store() {\r\n    let put = JSON.stringify(cart)\r\n    sessionStorage.setItem(\"cart\", put)\r\n}\r\nexport function add(newItem,index) {\r\n    let instore = sessionStorage.getItem(\"cart\") \r\n    instore = JSON.parse(instore)\r\n    if(sessionStorage.getItem(`carted-item${index}`) === null){\r\n        sessionStorage.setItem(`carted-item${index}`,true)\r\n        if (instore === null) {\r\n            cart.push(newItem)\r\n            store();\r\n            console.log(\"from the beginning \" + cart );\r\n            // alert(\"empty but new value is \" + sessionStorage.getItem(\"cart\"))\r\n        }else if(cart.length > 0){\r\n            cart.push(newItem)\r\n            store();\r\n            console.log(\"added newitem when cart len  = 0 <->\" + cart);\r\n        }else if(cart.length === 0){\r\n            cart = JSON.parse(sessionStorage.getItem(\"cart\"))\r\n            cart.push(newItem)\r\n            store();\r\n            console.log(\"cart is now empty \"+ cart + \" and len is \" + cart.length);\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}